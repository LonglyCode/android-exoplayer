name: Build FFmpeg

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: 'temurin'
          architecture: x64

      - name: Set up Android SDK
        run: | 
          cd "$GITHUB_WORKSPACE"
          wget https://dl.google.com/android/repository/android-ndk-r21e-linux-x86_64.zip
          unzip android-ndk-r21e-linux-x86_64.zip
          rm android-ndk-r21e-linux-x86_64.zip
          cd android-ndk-r21e
          echo "NDK_PATH=$(pwd)" >> $GITHUB_ENV

      - name: Set environment variables
        run: |
          cd "$GITHUB_WORKSPACE"
          git clone https://github.com/google/ExoPlayer.git 
          cd ExoPlayer
          git checkout tags/r2.16.1
          echo "ExoPlayer_PATH=$(pwd)" >> $GITHUB_ENV
          echo "FFMPEG_MODULE_PATH=$(pwd)/extensions/ffmpeg/src/main" >> $GITHUB_ENV
          echo "HOST_PLATFORM=linux-x86_64" >> $GITHUB_ENV
          echo "ENABLED_DECODERS=(vorbis opus flac mp3 acc ac3 eac3)" >> $GITHUB_ENV

      - name: Build FFmpeg
        run: |
          cd $FFMPEG_MODULE_PATH/jni
          git clone git://source.ffmpeg.org/ffmpeg
          cd ffmpeg
          git checkout release/4.2
          cd ..
          ./build_ffmpeg.sh $FFMPEG_MODULE_PATH $NDK_PATH $HOST_PLATFORM ${ENABLED_DECODERS[@]}
          ls -ahl $FFMPEG_MODULE_PATH/jni/ffmpeg

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.2 # 指定发布的标签名称
          release_name: Release 1.0.2 # 指定发布的名称
          draft: false
          prerelease: false

      - name: Upload APKs
        uses: actions/upload-artifact@v2
        with:
          name: FFmpeg Binaries
          path: $FFMPEG_MODULE_PATH/jni/ffmpeg/build/outputs/ # 指定构建结果的路径

      - name: Get Release ID
        id: get_release_id
        run: echo "::set-output name=release_id::$(echo ${{ steps.create_release.outputs.release_id }})"

      # - name: Attach Artifacts
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ${{ github.workspace }}/FFmpeg Binaries.zip # 压缩构建结果的路径
      #     asset_name: FFmpeg Binaries.zip
      #     asset_content_type: application/zip
